<?xml version="1.0" encoding="UTF-8"?>

    <!-- ************************************************************************ -->
    <!--     Copyright Â© 2017 BroadSoft Inc.             -->
    <!-- ************************************************************************ -->
    <!--                XSI  X M L  S C H E M A                                   -->
    <!--               *************************                                  -->
    <!-- This file defines the schema types and elements required by the Event    -->
    <!-- Subscription interface in the http://schema.broadsoft.com/xsi namespace. -->
    <!-- The Elements and Types are defined in the Alphabetical Order with        -->
    <!-- grouping at the Element, Complex and Simple level respectively.          -->
    <!-- ************************************************************************ -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schema.broadsoft.com/xsi"
  targetNamespace="http://schema.broadsoft.com/xsi"
  attributeFormDefault="unqualified" elementFormDefault="qualified"
  version="1.0">

  <xs:include schemaLocation="../XSIDataTypes.xsd" />
  <xs:include schemaLocation="../XSIBaseEvent.xsd" />

  <!-- **************************************************************-->
  <!--   Element Type in Alphabetical Order.                         -->
  <!-- **************************************************************-->


  <xs:element name="Subscription" type="Subscription">
    <xs:annotation>
      <xs:documentation>
        Clients creates Subscription to get notification about events as per the
        details of the subscription.
        A successful Subscription returns the details of it else an XCap
        error is returned with the details of the error.
      </xs:documentation>
    </xs:annotation>
  </xs:element>


  <xs:element name="SubscriptionList">
    <xs:annotation>
      <xs:documentation>
        SubscriptionList enlist all the SubscriptionEntity matching a particular search
        criteria or filter as given in the request string.
        SubsciptionList can be requested against a particular
        SubscriberId, targetId and a Event Package or combination of
        all.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="subscription" type="Subscription"
          minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>



  <!-- **************************************************************-->
  <!--         Complex Data Types                                    -->
  <!-- **************************************************************-->
  <xs:complexType name="Subscription">
    <xs:annotation>
      <xs:documentation>
        Subscription represents a single Subscription.
        
        Change History:
        19.0 - added targetSubId element.
        19.0 - changed expires element type to SubscriptionExpiration
        23.0 - added eventPackageList element.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="subscriptionId" type="SubscriptionId"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            A system generated unique value for each subscription.
            This should not be provided while creating a new or
            duplicate(overwriting an existing) subscription.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sharedSubscriptionId" type="SubscriptionId"
      	minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                The unique ID of the shared subscription. Generated by the client and 
                sent for subscriptions to the same event package and target id combination.
              </xs:documentation>
            </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="subscriberId" type="UserId"
          minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              The owner of the subscription. This consists of a user-portion
              followed by an @ sign and a domain name. Domain name is
              compulsory in the SubscriberID.
              This should not be provided while creating or modifying a
              subscription.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="clientId" type="ClientAppId" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              The owner of the subscription is a clientApp.
              This is the identity for the clientApp.  It does 
              not contain an @ sign. 
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="targetIdType" type="EntityType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The type of the targetId being subscribed to. This may be a User,
            group,service provider, enterprise or system.
            This should not be provided while creating or modifying a
            subscription.
		      </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetGrpParentId" type="NonEmptyString"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            This is available only when the targetIdType is group. This represents
            either the ServiceProviderId or EnterpriseID to which the
            group belongs.
            This should not be provided while creating or modifying a
            subscription.
		  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The target Id of the Subscription. This consists of a user id for a
            targetIdType user, service provider id/enterprise id for a
            targetIdType Enterprise,group id for a targetIdType Group
            and this element is not present for a targetIdType System.
            This should not be provided while creating or modifying a
            subscription.
		  </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetSubId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Used by specific event packages to provide a second level of 
            granularity to the  targetId.
            E.g. A targetUserId for a MeetMeConference bridge can have a
            targetSubId which identifies a specific conference which 
            belongs to the bridge.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="event" type="EventPackage" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              The one event package being subscribed for.
  		      </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="eventPackageList" type="EventPackageList" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              A list of event packages being subscribed for.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="expires" type="SubscriptionExpiration" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The expiration value is the relative time (delta from the current
            time) in seconds until the expiration of a subscription.
            This ranges from minimum value of 3600 to any higher integer
            value. However, system may overwrite this value based on
            BroadWorks AS restriction for "min" and "max" value for a
            particular type of restriction. When not present, treated as if 
            the default minimum (3600) was specified.
         </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="httpContact" type="ContactURL"
          minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              The location information(URI+Scheme(Http/Https)) where events are
              sent to for this subscription.
			      </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="channelSetId" type="ChannelSetId"
          minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              The ChannelSet id associated with the subscription. The event for
              the subscription are sent through the channel which
              belongs to this ChannelSetId.
              Client should create a Channel with this ChannelSetId. This is not
              required if the Client provides the httpContact.
              If both httpContact and ChannelSetId is provided, the Channel takes
              the priority over HttpContact for event delivery.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="applicationId" type="ExternalApplicationId"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            A globally Unique Id for the External Application. This shall be
            provide by the client
            The application ID of the external application that owns a
            subscription.This should be globally unique. One way to
            ensure global uniqueness is for the application ID to be a
            URI (similar to an XML name space) that is owned by the
            application's creator. For example,
            http://www.broadsoft.com/application/call-manager. If a user
            needs to have multiple instances of the same application
            running, then the applicationID must also include
            information that is unique to each instance. For
            example,http://www.broadsoft.com/application/call-manager/mobile-device-1.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SubscriptionTerminatedEvent">
    <xs:annotation>
      <xs:documentation>
        SubscriptionTerminatedEvent is a generic event used to report that the specified subscription
        has been terminated.
        Note that there are multiple ways a subscription can be terminated such
        as:
        -Application requests termination of Subscription
        - Subscription expiration
        - Change in the Privacy settings of the targetId for a subscription
        - Manual deletion by an administrator.
            </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EventData" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************-->
  <!--         Simple Data Types                                    -->
  <!-- **************************************************************-->
  <xs:simpleType name="EntityType">
    <xs:annotation>
      <xs:documentation>
        The type of the entity used for subscription.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="User" />
      <xs:enumeration value="Group" />
      <xs:enumeration value="ServiceProvider" />
      <xs:enumeration value="System" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="EventPackage">
    <xs:annotation>
      <xs:documentation>
        The names of all XSI subscription event packages.
        
        Change History:
        19.0 - Added Meet Me Conference event package.
        20.0 - Deprecated the 'Call Recording' event package. 
               Note: subscriptions for the Call Recording event package 
               will get an error response for release version 20.0 and onward, 
               or if no release version is provided in the subscription request.
        20.0 - added Flexible Seating Guest event package.
        21.0 - added Personal Assistant event package
        21.0 - added Collaborate Room event package
        21.1 - added Call Forwarding Always Secondary and SilentAlerting event package
        22.0 - added Push Notification Registration event package.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="NonEmptyToken">
      <xs:enumeration value="Advanced Call" />
      <xs:enumeration value="Basic Call" />
      <xs:enumeration value="BroadWorks Anywhere" />
      <xs:enumeration value="Call Center Agent" />
      <xs:enumeration value="Call Center Agent Monitoring" />
      <xs:enumeration value="Call Center Configuration" />
      <xs:enumeration value="Call Center Monitoring" />
      <xs:enumeration value="Call Center Queue" />
      <xs:enumeration value="Call Forwarding Always" />
      <xs:enumeration value="Call Forwarding Always Secondary" />
      <xs:enumeration value="Call Forwarding Busy" />
      <xs:enumeration value="Call Forwarding No Answer" />
      <xs:enumeration value="Call Park" />
      <xs:enumeration value="Call Recording" />
      <xs:enumeration value="Call Transfer" />
      <xs:enumeration value="Call Waiting" />
      <xs:enumeration value="Collaborate Room" />
      <xs:enumeration value="CommPilot Express" />
      <xs:enumeration value="Do Not Disturb" />
      <xs:enumeration value="Flexible Seating Guest" />
      <xs:enumeration value="Hoteling Guest" />
      <xs:enumeration value="Last Number Redial" />
      <xs:enumeration value="Meet Me Conference" />
      <xs:enumeration value="Music On Hold" />
      <xs:enumeration value="N-Way Call" />
      <xs:enumeration value="Personal Assistant" />
      <xs:enumeration value="Push Notification Registration" />
      <xs:enumeration value="Remote Office" />
      <xs:enumeration value="Route Point Queue" />
      <xs:enumeration value="Security Classification" />
      <xs:enumeration value="Sequential Ring" />
      <xs:enumeration value="Silent Alerting" />
      <xs:enumeration value="Simultaneous Ring Personal" />
      <xs:enumeration value="Standard Call" />
      <xs:enumeration value="Third-Party Voice Mail Support" />
      <xs:enumeration value="Three-Way Call" />
      <xs:enumeration value="Voice Mail Message Summary" />
      <xs:enumeration value="Voice Messaging" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="EventPackageList">
    <xs:annotation>
      <xs:documentation>
        A list of event packages.
        
        Change History:
        23.0 - added
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="event" type="EventPackage" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            One or more event packages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:simpleType name="SubscriptionExpiration">
    <xs:annotation>
      <xs:documentation>
        The expiration value is the relative time (delta from the current time)
        in seconds until the expiration of a subscription.  The value 2147483647
        (max int) is a special value and means that the subscription never
        expires.
        
        Note that for a new expiration value (subscription add or modify), the
        minimum value is 3600 seconds (1 hour).  Anything received less than
        3600 is treated as 3600.  In addition, the maximum value is subject to
        policies on the AS.  Anything received above the maximum allowed value
        per the AS policies is treated as the maximum allowed value.
        
        For an existing subscription, a value of 0 means the subscription has
        expired.

        Change History:
        19.0 - added
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="NonNegativeInt"/>
  </xs:simpleType>
</xs:schema>
