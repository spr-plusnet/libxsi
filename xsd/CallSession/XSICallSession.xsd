<?xml version="1.0" encoding="UTF-8"?>



    <!-- ************************************************************************ -->
    <!--     Copyright (c) 2008 BroadSoft, Inc.  All rights reserved.             -->
    <!-- ************************************************************************ -->
    <!--                XSI  X M L  S C H E M A                                   -->
    <!--               *************************                                  -->
    <!-- This file defines the schema types and elements required by the          -->
    <!-- CallSession DataTypes interface in the http://schema.broadsoft.com/xsi   -->
    <!-- name space.                                                              -->
    <!--                                                                          -->
    <!-- The Elements and Types are defined in the Alphabetical Order with        -->
    <!-- grouping at the Element, Complex and Simple level respectively.          -->
    <!-- ************************************************************************ -->


<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schema.broadsoft.com/xsi"
  targetNamespace="http://schema.broadsoft.com/xsi"
  attributeFormDefault="unqualified" elementFormDefault="qualified"
  version="1.0">

  <xs:include schemaLocation="../XSIDataTypes.xsd" />

  <!-- **************************************************************-->
  <!--   Elements in Alphabetical Order.                             -->
  <!-- **************************************************************-->

  <xs:element name="Call" type="Call">
    <xs:annotation>
      <xs:documentation>
        User call details properties. Information about a call for a user, along
        with details on that call.   
            </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Calls">
        <xs:annotation>
            <xs:documentation>
                User Active Call List properties. This returns a list of call Ids, each call Id identifying an
                active call associated with the user. Along with each call Id is a URL that allows
                retrieval of
                call detail information on that specific call.
   </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="call" type="CallInfo" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
  </xs:element>
  
  <xs:element name="Conference" type="Conference">
    <xs:annotation>
      <xs:documentation>
        Contains the details of a conference.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  
  <xs:element name="CustomerOriginatedTrace">
    <xs:annotation>
      <xs:documentation>
        This request is used to trace a call. The trace is done by generating an
        SNMP alarm with the caller ID information. The subscriber must
        have the Customer Originated Trace (COT) service assigned in
        order to use this request successfully. If the request specifies
        a callId, then the trace is made for the corresponding call.
        This can only be done if the call is in the Active, Held or
        Remote Held state with Terminator personality and can only be
        performed once per call. If the request does not specify a
        callId, then the trace is made for the subscriber's most
        recently received/missed call.
            </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="callId" type="CallId" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              If the request specifies a callId, then the trace is made for the
              corresponding call.
                        </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <!-- xs:element name="DirectedCallPickupCall">
        <xs:annotation>
            <xs:documentation>
                Schema element for Directed Call Pickup.
                Requests a new call to be started (a Click-to-Dial call) for a Directed
                Call Pickup attempt against the specified user. The user must have the
                Directed Call Pickup service in order to use this request.
                Address is mandatory for Directed Call Pickup request.
      </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="address" type="Address">
                    <xs:annotation>
                        <xs:documentation>
                            The address of the user to pickup against.
              </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
  <xs:element name="DirectedCallPickupWithBargeInCall">
        <xs:annotation>
            <xs:documentation>
                Schema element for Directed Call Pickup with barge in.
                Requests a new call to be started (a Click-to-Dial call) for a Directed
                Call Pickup with Barge-in attempt against the specified target user. If
                no address is specified, then automatic target selection is used if
                enabled or the user is prompted to enter the target address upon
                answering the Click-to-Dial call.
      </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="address" type="Address" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>
                            The address of the user to pickup against.
              </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
  <xs:element name="MuteTransfer">
    <xs:annotation>
      <xs:documentation>
        Requests the specified call to be transferred to the specified address. The
        user must have the Call Transfer service in order to use this
        request. In contrast with the MuteTransfer, the transfer
        actually takes place when the call to the specified address
        reaches the alerting state.

        Response: CallStartInfo, if successful.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="address" type="Address">
          <xs:annotation>
            <xs:documentation>
              The address to transfer the call to.
              </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="SilentMonitorNext">
    <xs:annotation>
      <xs:documentation>
        Requests a new call to be started (a Click-to-Dial call) for an attempt by
        the Supervisor to silently monitor the next call received by an
        agent, call center, or route point. The Supervisor invoking
        Silent Monitoring needs to have the Directed Call PickUp with
        Barge-In and Call Center Monitoring services assigned in order
        to use this request. If the target is an agent, then the agent
        must have the Call Center â€“ Premium license assigned. If the
        target is a call center, then the call center must be of type
        premium.

        Response: CallStartInfo, if successful
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="address" type="Address">
          <xs:annotation>
            <xs:documentation>
              The address of the agent, call center, or route point to monitor.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element-->

  <!--  xs:element name="ThirdPartyVoiceMailMessageSummary">
    <xs:annotation>
      <xs:documentation>
        Requests the number of new messages for the Third-Party voice mail
        message summary be set to 0 or 1 as specified in the request.  If
        Third-Party Voice Mail Support is enabled, then the number of new
        messages for the service is set as specified, and the necessary message
        summary notifications are sent.  If only Third-Party MWI Control is
        enabled, then message summary notifications are sent using the specified
        number of new messages.  The user must have the Third-Party Voice Mail
        Support or Third-Party MWI Control enabled in order to use this request.
              
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="newMessages" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>
              The updated voice message summary for the Third-Party Voice Mail
              Support/Voice Messaging service.
                      </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element-->
  
  <!--xs:element name="HookStatus">
    <xs:annotation>
      <xs:documentation>
        Hook Status of a user.
        
        Change History:
        R19.sp6 - Added
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="hookStatus" type="HookStatus" />
      </xs:sequence>
    </xs:complexType>
  </xs:element--> 
  
  <xs:element name="IMRNInfo" type="IMRNInfo">
    <xs:annotation>
      <xs:documentation>
        An IMRNInfo contains the IMRN allocation.
        Change History:
        R18.sp1 - Added
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="TransmitDTMF">
    <xs:annotation>
      <xs:documentation>
        Request to send transmit a series of digits on behalf of the user.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dtmfToTransmit" type="DTMFDigit">
          <xs:annotation>
            <xs:documentation>
              Specifies the list of DTMF to transmit. Consist of the following set:
              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, *, #, A, B, C, D.
              A comma "," may be included in the parameter string to indicate a
              pause between characters.

              For example, the token "1,2,1" indicates that the DTMFs 1, 2, and 1
              are to be transmitted separated by a pause.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="VoiceMailMessageSummary">
    <xs:annotation>
      <xs:documentation>
        Requests the voice mail message summary of the Third-Party Voice Mail
	Support/Voice Messaging service for the specified user.  If the user
	does not have either service active, then the response always has an
	empty message summary.
	        
	Note that a user with both the Third-Party Voice Mail Support and Voice
	Messaging services is not a supported configuration.  If a user has both
	services, then the Voice Messaging service takes precedence and its
        voice mail message summary is returned.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="summary" type="MessageSummary">
          <xs:annotation>
            <xs:documentation>
              The updated voice message summary for the Third-Party Voice Mail
              Support/Voice Messaging service.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- **************************************************************-->
  <!--   Complex Types in Alphabetical Order.                        -->
  <!-- **************************************************************-->

  <xs:complexType name="Call">
    <xs:annotation>
      <xs:documentation>
        Contains the details of a call. Note that the local user is the user that
        own the call, the remote party is the party the local user is
        connected to, and a redirecting party is a party that has
        redirected the call.
        
        Change History:
        17.sp4 - Added recorded element.   
        20.0 - Added executiveUserId element  
        20.0 - Added allowedRecordingControls and recordingState elements.
        20.0 - Added securityClassification element
        20.0 - Added clientSessionInfo element
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="callId" type="CallId">
        <xs:annotation>
          <xs:documentation>
            The call ID of the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="extTrackingId" type="ExternalTrackingId">
        <xs:annotation>
          <xs:documentation>
            The external tracking ID for the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="networkCallId" type="NonEmptyToken"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            For an originating call, it is the SIP Call ID of the outgoing SIP INVITE.
            For a terminating call, it is the SIP Call ID of the incoming SIP INVITE.
            This field is only present when the call to the user is a network call or 
            a distributed group call. 
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="personality" type="Personality">
        <xs:annotation>
          <xs:documentation>
            The personality of the call. Note that the personality can change due
            to redirections and other service interactions.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="state" type="CallState">
        <xs:annotation>
          <xs:documentation>
            The state of the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="releaseCause" type="ReleaseCause"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The release cause for the call. Only present if the call is being
            released due to a failure of some kind. Note that it can be
            present for calls that have not yet been released such as
            calls receiving treatment and detached calls.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="releasingParty" type="ReleasingParty"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Information about the remote party.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="remoteParty" type="PartyInformation">
        <xs:annotation>
          <xs:documentation>
            Information about the remote party.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="redirections" type="RedirectionList"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            List of all the redirections (if any) for the call. These are the
            details of other parties that have redirected this call.
            Only present for unanswered, incoming calls.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="redirect" type="Redirect" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The details for the redirect when the local user has redirected the
            call. Note that these details can be replaced in some
            scenarios (e.g. BroadWorks Anywhere is used for a
            terminating call, and then the call is forwarded).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endpoint" type="Endpoint" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The details of the endpoint that is linked to the call. Only present
            when an endpoint is associated with the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appearance" type="Appearance"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The appearance value for the call. Only present when the call has an
            appearance value assigned. This value matches the appearance
            index in the context of Enhanced Shared Call Appearance.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowAnswer" type="EmptyContent"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, an application can answer an Alerting, Terminator or
            Alerting, Click-to-Dial call using a CallTalkRequest. When
            not present, an application cannot answer an Alerting,
            Terminator or Alerting, Click-to-Dial call using a
            CallTalkRequest. Note that this element only applies to
            Alerting, Terminator and Alerting, Click-to-Dial calls.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowRetrieve" type="EmptyContent"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, an application can retrieve a this held call using a
            retrieve request. When not present, an application cannot
            retrieve a this held call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alternateAddressType" type="AlternateAddressType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The alternate address type in use for the local user. Only present
            whan an alternate address is in use. It is not present when
            the user's primary address is in use.
                    </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="huntGroupUserId" type="UserId"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The user ID of the call center being used to reach the agent (the
            local user). Only present when the call is an unanswered
            call center termination.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="distinctiveRing" type="DistinctiveRing"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The distinctive ring pattern in use for the call. Only present for
            incoming calls for which a distinctive ring pattern should
            apply.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="diversionInhibited" type="EmptyContent"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, indicates that diversions are inhibited for the call and
            diversion/redirection attempts (including those initiated by
            applications) may be rejected. Redirection attempts from an
            application are rejected if the call is an other types of
            calls.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recallType" type="RecallType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The recall type for the call. Only present if the call was triggered
            by a callback or recall tracked by RecallType.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="Timestamp">
        <xs:annotation>
          <xs:documentation>
            The start time for the call. The value matches the value in the CDR
            for the call. Note that in some scenarios (e.g.
            Click-to-Dial call or a Barge-in), the start time for the
            call can change.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="answerTime" type="Timestamp"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The answer time for the call. Only present if the call was answered.
            The value matches the value in the CDR for the call. Note
            that in some scenarios (e.g. a Barge-in), the answer time
            for the call can change.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="heldTime" type="Timestamp" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The time this call entered the Held state. Present only if the call
            is in the Held state.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalHeldTime" type="PositiveInt"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The total cumulated time the call spent in the Held or Remote Held
            state in milliseconds. Only present if the call was at least
            once in the Held or Remote Held state.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="detachedTime" type="Timestamp"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The detached time for the call. Only present when the call entered
            the release state. For notifications where a Detached call
            is reported as Released, the value is actually the time at
            which the call was detached. For notifications where the
            call is truly being released and not detached, the value
            matches the value in the CDR for the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="releaseTime" type="Timestamp"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The release time for the call. Only present when the call is reported
            as Released. For notifications where a Detached call is
            reported as Released, the value is actually the time at
            which the call was detached. For notifications where the
            call is truly being released and not detached, the value
            matches the value in the CDR for the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="acdCallInfo" type="ACDCallInfo"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The ACD call information when the call is offered to a call center.
            Only present when the call coming from a Call Center or a
            DNIS.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="agentEscalation" type="AgentEscalation"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Indicates whether this call is in relation to an agent escalation.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="acdOutgoingCallInfo" type="ACDOutgoingCallInfo"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The ACD call information when an agent makes an outgoing call as an
            ACD.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="groupCallParkLocationSelected" type="EmptyContent" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present indicates that the Group Call Park feature has been invoked and the 
            parked location selected. This indicates that the remoteParty element contains 
            the Parked location.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recorded" type="EmptyContent" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Release Added:  R17sp4
            If true, then the call is being recorded, or the record command was issued at least once during the life of the call.
            If false, then the call is not being recorded.
            If not present, then the Call Recording service is not assigned.
          </xs:documentation>
        </xs:annotation>
      </xs:element> 
      <xs:element name="findMeFollowMeUserId" type="UserId"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
          	Release Added: R19.0
            The user ID of the Find-Me/FollowMe user being used to redirect 
            the call. 
            Present when the call is being redirected to the subscriber
            by a Find-me/Follow-me group they are a member of.
          </xs:documentation>
        </xs:annotation>
      </xs:element> 
      <xs:element name="allowedRecordingControls" type="RecordingControls" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Release Added: R20.0
            The recording controls that are allowed for this call.
            Present when the user has the call recording service active.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recordingState" type="RecordingState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Release Added: R20.0
            The current state of the recording.
            Present when the user has the call recording service active and 
            a call recording is currently pending, started, paused, or failed.
            Absent when there is not an active recording.
          </xs:documentation>
        </xs:annotation>
      </xs:element>     
      <xs:element name="executiveUserId" type="UserId"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Release Added: R20.0
            The user ID of the Executive for the Executive Assistant
            service. 
            Present when the call is being intiated by or filtered for an 
            executive assistant for the Executive Assistant Service.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recallFromParty" type="PartyInformation" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The recall From Party for a Recall action. This element will be populated only
            on recalls from Consultative Call Transfer, Blind Transfer and Call Park.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="securityClassification" type="NonEmptyToken"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Release Added: R20.0
            The security classification level of the call.
            Present when the Security Classification service
            is assigned to the user and the call classification level has been 
             determined. 
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clientSessionInfo" type="ClientSessionInfo" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            An opaque token set by the client.
            
            This is present if client session info 
            has been set for this session, or
            if client session info has been changed.
          
            Release Added: R20.0
          </xs:documentation>
        </xs:annotation>
      </xs:element>                  
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CallIdList">
    <xs:annotation>
      <xs:documentation>
        A sorted list of call IDs.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="callId" type="CallId" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CallInfo">
	<xs:annotation>
		<xs:documentation>
			A list of call IDs and URLs allowing call detail retrieval on the
			identified calls.
            </xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="callId" type="CallId" />
		<xs:element name="uri" type="NonEmptyString" minOccurs="0" />
	</xs:sequence>
	<xs:attribute name="inConference" type="xs:boolean" />
  </xs:complexType>
  <xs:complexType name="CallList">
    <xs:annotation>
      <xs:documentation>
        A list of calls, sorted by call ID.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="call" type="Call" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Conference">
    <xs:annotation>
      <xs:documentation>
        A Conference maintains information about a conference
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="state" type="ConferenceState"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The state of the conference.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endpoint" type="Endpoint" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The details of the endpoint that is linked to the conference. Only
            present when an endpoint is associated with the conference.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appearance" type="Appearance"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The appearance value for the conferenece. Only present when the
            conference has an appearance value assigned. This value
            matches the appearance index in the context of Enhanced
            Shared Call Appearance.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="muted" type="EmptyContent" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, indicates that the controller of the conference 
            has been muted.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="conferenceType" type="ConferenceType"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, indicates a specific type of conference like Silently
            Monitored conference or Barge-In conference etc.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="conferenceParticipantList" type="ConferenceParticipantList"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The list of conferenceParticipant.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConferenceParticipant">
    <xs:annotation>
      <xs:documentation>
        A ConferenceEntry maintains information about a conference.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="callId" type="CallId">
        <xs:annotation>
          <xs:documentation>
            The callId of the call.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="muted" type="EmptyContent" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, indicates that the call has been muted.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deaf" type="EmptyContent" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            When present, indicates that the call is deaf (i.e. not transmitting
            the audio stream to the participant).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConferenceParticipantList">
    <xs:annotation>
      <xs:documentation>
        A list of ConferenceEntry
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="conferenceParticipant" type="ConferenceParticipant"
        maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="IMRNInfo">
    <xs:annotation>
      <xs:documentation>
        An IMRN Info contains the IMRN allocation.
        Change History:
        R18.sp1 - Added
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="imrn" type="DN">
        <xs:annotation>
          <xs:documentation>
            The allocated IMRN in E164 format.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MessageSummary">
    <xs:annotation>
      <xs:documentation>
        Contains the message summary details for a service. 
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="newMessages" type="PositiveInt"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The number of new messages. Only present when there are new messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="oldMessages" type="PositiveInt"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The number of old messages. Only present when there are old messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="newUrgentMessages" type="PositiveInt"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The number of new urgent messages. Only present when there are new
            urgent messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="oldUrgentMessages" type="PositiveInt"
        minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The number of old urgent messages. Only present when there are old
            urgent messages.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- **************************************************************-->
  <!--   Simple Types in Alphabetical Order.                         -->
  <!-- **************************************************************-->


  <xs:simpleType name="CallState">
    <xs:annotation>
      <xs:documentation>
        The state of a call.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="NonEmptyToken">
      <xs:enumeration value="Alerting">
        <xs:annotation>
          <xs:documentation>
            This is the state in which an attempt is being made to establish
            communication. For example, when a caller manually dials a
            valid destination, the call is in the Alerting state while
            the communication is being established.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Active">
        <xs:annotation>
          <xs:documentation>
            The state in which a subscriber is actively participating in a call
            session. For example, when the remote subscriber goes
            off-hook on an incoming call, its call goes into the Active
            state.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Held">
        <xs:annotation>
          <xs:documentation>
            The state in which the remote party is inactively participating in a
            call session. This can happen for instance when the
            subscriber has put the call on hold.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Remote Held">
        <xs:annotation>
          <xs:documentation>
            The state in which a subscriber is inactively participating in a call
            session. This can happen for instance when the subscriber
            has been put on hold.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Detached">
        <xs:annotation>
          <xs:documentation>
            The state in which the subscriber is no longer involved in the call
            session except for historical and tracking (e.g. billing)
            purposes. This can happen for instance when an incoming call
            has been forwarded to another destination. Once the call has
            been forwarded, the forwarding subscriber is in the Detached
            state. The subscriber call takes no longer an Active role in
            the call session but is kept in the Detached state. Once in
            the Detached state, the call can only go into the Released
            state. Transition to other states is not possible.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Released">
        <xs:annotation>
          <xs:documentation>
            The state in which the subscriber is no longer involved in the call
            session. This can happen if for instance the subscriber goes
            on-hook
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Idle">
        <xs:annotation>
          <xs:documentation>
            The state in which there is no relationship between a subscriber and
            the call session.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ConferenceState">
    <xs:annotation>
      <xs:documentation>
        The various token enumerations for the ConferenceState.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="NonEmptyToken">
      <xs:enumeration value="Active">
        <xs:annotation>
          <xs:documentation>
            The controller is an active participant.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Held">
        <xs:annotation>
          <xs:documentation>
            The controller has held the conference and so is no longer an active
            participant.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Released">
        <xs:annotation>
          <xs:documentation>
            The conference has been released.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ConferenceType">
    <xs:annotation>
      <xs:documentation>
        The various token enumerations for the ConferenceType.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="NonEmptyToken">
      <xs:enumeration value="Barge-In" />
      <xs:enumeration value="Silently Monitored" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>